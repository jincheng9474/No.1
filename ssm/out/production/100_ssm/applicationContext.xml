<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 配置包扫描 -->
    <context:component-scan base-package="com.atguigu">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!-- 加载jdbc.properties属性配置文件 -->
    <context:property-placeholder location="classpath:jdbc.properties" />

    <!-- 配置数据库连接池 -->
    <bean class="com.alibaba.druid.pool.DruidDataSource" id="dataSource">
        <property name="username" value="${user}" />
        <property name="password" value="${password}" />
        <property name="url" value="${url}" />
        <property name="driverClassName" value="${driverClassName}" />
        <property name="initialSize" value="${initialSize}" />
        <property name="maxActive" value="${maxActive}" />
    </bean>

    <!--
        开始整合Spring + Mybatis
        1 创建SqlSessionFactory
        2 把Mybatis生成的接口都放到Spring容器中
    -->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
        <!-- 获取Spring容器中的数据库连接池==mybatis的数据库环境 -->
        <property name="dataSource" ref="dataSource" />
        <!-- 配置Mybatis的核心配置文件 -->
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <!-- 配置从哪里去加载 mybatis的mapper.xml配置文件 -->
        <property name="mapperLocations" value="classpath:com/atguigu/mapper/*.xml" />
    </bean>

    <!-- 把Mapper接口代理，扫描到Spring容器中
            base-package 属性指定Mapper接口的包名
     -->
    <mybatis:scan base-package="com.atguigu.mapper" ></mybatis:scan>





    <!-- 切面类（事务管理器） -->
    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          id="transactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 事务属性 -->
    <tx:advice id="tx_advice" >
        <tx:attributes>
            <!-- 写操作，需要事务 -->
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <!-- 剩下的读操作，要设置read-only="true" 底层做优化 -->
            <tx:method name="*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!--
        AOP代理 + 切入点表达式
    -->
    <aop:config>
        <aop:advisor advice-ref="tx_advice"
                     pointcut="execution(public * com.atguigu..*Service*.*(..))" />
    </aop:config>


</beans>