<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 加载jdbc.properties属性配置文件 -->
    <context:property-placeholder location="classpath:jdbc.properties" />

    <!-- 配置包扫描 -->
    <context:component-scan base-package="com"></context:component-scan>

    <!-- 配置数据库连接池 -->
    <bean class="com.alibaba.druid.pool.DruidDataSource" id="dataSource">
        <property name="maxActive" value="${maxActive}" />
        <property name="initialSize" value="${initialSize}" />
        <property name="username" value="${user}" />
        <property name="password" value="${password}" />
        <property name="url" value="${url}" />
        <property name="driverClassName" value="${driverClassName}" />
    </bean>

    <!-- 配置执行sql语句的JdbcTemplate工具类 -->
    <bean class="org.springframework.jdbc.core.JdbcTemplate" id="jdbcTemplate">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!--
         InternalResourceViewResolver 视图解析器
         没有视图解析器之前，我们在Controller中需要返回整完的跳转路径<br/>
         有了视图解析器之后，我们只需要返回文件名即可，
         比如说，如果我返回  return "ok";
         则，这个ok会跟视图解析器中的前缀，后缀做字符串拼接操作。然后得到最终的跳转路径<br/>

         最终的跳转路径是： 前缀 + ok + 后缀，得到结果是：  /WEB-INF/pages/ok.jsp

         有了视图解析器之后，在Controller中，只需要返回文件名即可，这个文件名，我们管它叫：视图名。
     -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 前缀 -->
        <property name="prefix" value="/book/" />
        <!-- 配置后缀 -->
        <property name="suffix" value=".jsp" />
    </bean>


    <!-- SpringMVC开发的（必备）标配 -->
    <!-- 开启SpringMVC中对静态资源的处理支持 -->
    <mvc:default-servlet-handler></mvc:default-servlet-handler>
    <!-- 开启SpringMVC高级的注解功能-->
    <mvc:annotation-driven></mvc:annotation-driven>



</beans>